#!/bin/bash

set -e

build_root=/app
cache_root=/cache
buildpack_root=/build/buildpacks

buildpacks=($buildpack_root/*)
selected_buildpack=

mkdir -p $cache_root

# This is to get a custom buildpack. Probably should use profile.d though
[[ -f "$build_root/.env" ]] && . "$build_root/.env"

if [ -n "$BUILDPACK_URL" ]; then
  echo "Fetching custom buildpack"
  buildpack="$buildpack_root/custom"
  rm -rf "$buildpack"
  git clone --depth=1 "$BUILDPACK_URL" "$buildpack"
  selected_buildpack="$buildpack"
  buildpack_name=$($buildpack/bin/detect "$build_root") && selected_buildpack=$buildpack
else
  for buildpack in "${buildpacks[@]}"; do
    buildpack_name=$($buildpack/bin/detect "$build_root") && selected_buildpack=$buildpack && break
  done
fi

if [ -n "$selected_buildpack" ]; then
  echo "$buildpack_name app detected"
else
  echo "Unable to select a buildpack"
  exit 1
fi

$selected_buildpack/bin/compile "$build_root" "$cache_root"

echo "Discovering process types"
$selected_buildpack/bin/release "$build_root" "$cache_root" > /app/.release

[[ -f "$build_root/Procfile" ]] && echo "Procfile declares types -> $(ruby -e "require 'yaml';puts YAML.load_file('$build_root/Procfile').keys().join(', ')")"
echo "Default process types for $buildpack_name -> $(ruby -e "require 'yaml';puts YAML.load_file('$build_root/.release')['default_process_types'].keys().join(', ')")"

cat > /start <<EOF
#!/bin/bash
cd /app
[[ -d .profile.d ]] && source .profile.d/*
if [[ -f Procfile ]]; then
    ruby -e "require 'yaml';puts YAML.load_file('Procfile')['\$1']" | bash
else
    ruby -e "require 'yaml';puts YAML.load_file('.release')['default_process_types']['\$1']" | bash
fi
EOF
chmod +x /start


